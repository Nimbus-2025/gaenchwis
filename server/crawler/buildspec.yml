version: 0.2

phases:
  pre_build:
    commands:
      # 변경된 파일 확인
      - |
        if [ "$CODEBUILD_WEBHOOK_EVENT" = "PULL_REQUEST_MERGED" ] || [ "$CODEBUILD_WEBHOOK_EVENT" = "PUSH" ]; then
          CHANGED_FILES=$(git diff --name-only HEAD^..HEAD)
        else
          CHANGED_FILES=$(git diff --name-only $CODEBUILD_SOURCE_VERSION^..$CODEBUILD_SOURCE_VERSION)
        fi
      - |
        if echo "$CHANGED_FILES" | grep -q "^server/crawler/"; then
          echo "Changes detected in crawler directory, proceeding with build..."
        else
          echo "No changes in crawler directory, skipping build..."
          exit 0
        fi
      # ECR 로그인
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      # 환경변수 설정
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/gaenchwis/crawler-service
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)

  build:
    commands:
      # Docker 이미지 빌드
      - echo Build started on `date`
      - echo Building the Docker image...
      - cd server/crawler
      # - docker build -t $REPOSITORY_URI:latest .
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG -f Dockerfile . --progress=plain
      # - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      # - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:latest > imageDefinitions.json
      - printf '[{"name":"Gaenchwis-Crawler","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > $CODEBUILD_SRC_DIR/imageDefinitions.json
      - envsubst < ./task-definition.json > $CODEBUILD_SRC_DIR/task-definition.json
      # 새 태스크 정의 등록
      - aws ecs register-task-definition --cli-input-json file://task-definition.json

artifacts:
  files:
    - imageDefinitions.json
    - task-definition.json

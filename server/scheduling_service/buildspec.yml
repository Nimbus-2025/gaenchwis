version: 0.2

phases:
  install:
    commands:
      - echo Installing prerequisites...
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - echo "Debugging directory structure..."
      - pwd
      - ls -la
      - ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//  /g' -e 's/^/  /'
      # 변경된 파일 확인을 위한 git 설치
      - yum install -y git

  pre_build:
    commands:
      # 변경된 파일 확인
      - |
        if [ "$CODEBUILD_WEBHOOK_EVENT" = "PULL_REQUEST_CREATED" ] || [ "$CODEBUILD_WEBHOOK_EVENT" = "PULL_REQUEST_UPDATED" ]; then
          # PR의 경우
          echo "Processing Pull Request..."
          CHANGED_FILES=$(git diff --name-only origin/$CODEBUILD_SOURCE_BRANCH_NAME)
        elif [ "$CODEBUILD_WEBHOOK_EVENT" = "PUSH" ]; then
          # Push의 경우
          echo "Processing Push..."
          CHANGED_FILES=$(git diff --name-only HEAD~1)
        else
          echo "Default case..."
          CHANGED_FILES=$(git diff --name-only HEAD~1 || git ls-files)
        fi
      - echo "Changed files:"
      - echo "$CHANGED_FILES"
      - |
        if echo "$CHANGED_FILES" | grep -q "^server/scheduling_service/"; then
          echo "Changes detected in scheduling_service directory, proceeding with build..."
        else
          echo "No changes in scheduling_service directory, skipping build..."
          exit 0
        fi
      # ECR 로그인
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      # 환경변수 설정
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/gaenchwis/scheduling-service
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      # 권한 설정 추가
      - chmod -R 755 server/scheduling_service

  build:
    commands:
      # Docker 이미지 빌드
      - echo Building the Docker image...
      # 디렉토리 존재 확인
      - echo "Current directory is $(pwd)"
      - ls -la
      # 디렉토리 이동 및 빌드
      - cd server/scheduling_service || exit 1
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG -f Dockerfile . --progress=plain
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest

  post_build:
    commands:
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - printf '[{"name":"Gaenchwis-SchedulingBackend","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > $CODEBUILD_SRC_DIR/imageDefinitions.json
      - envsubst < ./task-definition.json > $CODEBUILD_SRC_DIR/task-definition.json

artifacts:
  files:
    - task-definition.json
    - imageDefinitions.json
  base-directory: $CODEBUILD_SRC_DIR/
  discard-paths: yes

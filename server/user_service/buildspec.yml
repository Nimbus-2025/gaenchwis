version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo Installing prerequisites...
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      # Python 및 테스트 의존성 설치
      - python -m pip install --upgrade pip
      - pip install pytest
      - pip install moto
      - pip install pytest-env
      - pip install pytest-asyncio
      - pip install httpx
      - pip install fastapi
      - pip install python-jose[cryptography]
      - pip install pyjwt

  pre_build:
    commands:
      # 테스트 실행 단계 추가
      - echo Running tests...
      - cd server/user_service
      - pip install -r requirements.txt
      - pytest -v
      # ECR 로그인
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/gaenchwis/user-service
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}

  build:
    commands:
      # Docker 이미지 빌드
      - echo Building the Docker image...
      - cd server/user_service
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG -f Dockerfile . --progress=plain
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest

  post_build:
    commands:
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - printf '[{"name":"Gaenchwis-UserBackend","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > $CODEBUILD_SRC_DIR/imageDefinitions.json
      - envsubst < ./task-definition.json > $CODEBUILD_SRC_DIR/task-definition.json

artifacts:
  files:
    - task-definition.json
    - imageDefinitions.json
  base-directory: $CODEBUILD_SRC_DIR/
  discard-paths: yes
